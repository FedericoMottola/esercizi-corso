{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Utente\\\\OneDrive\\\\Desktop\\\\esercizi-corso\\\\Settimana10\\\\Giorno3\\\\netflix-router\\\\src\\\\components\\\\MovieDetails.jsx\",\n  _s = $RefreshSig$();\nimport { useEffect } from \"react\";\nimport { useState } from \"react\";\nimport { Container, ListGroup, ListGroupItem } from \"react-bootstrap\";\nimport { useParams } from \"react-router\";\nimport OMDB_URL from \"../helpers/omdbURL\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MovieDetails = () => {\n  _s();\n  const [details, setDetails] = useState(null);\n  const [comments, setComments] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const params = useParams();\n  useEffect(() => {\n    const fetchDetails = async () => {\n      try {\n        let resp = await fetch(OMDB_URL + \"&i=\" + params.movieID);\n        if (resp.ok) {\n          let data = await resp.json();\n          console.log(data);\n          setDetails(data);\n        } else {\n          console.log(\"error fetching details\");\n        }\n      } catch (error) {\n        console.log(error);\n      }\n    };\n    const fetchComments = async () => {\n      setIsLoading(true);\n      try {\n        let response = await fetch(\"https://striveschool-api.herokuapp.com/api/movies/\" + params.movieID + \"/comments/\", {\n          headers: {\n            Authorization: \"Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI2NTc4MmM1NmMwNTgzNTAwMTg1MjJkZTYiLCJpYXQiOjE3MDU1Mjc4OTEsImV4cCI6MTcwNjczNzQ5MX0.PBN8qNdCegS4pE066u6m-07VGKbCCJH7G662G2tq8N8\"\n          }\n        });\n        if (response.ok) {\n          let data = await response.json();\n          setComments(data);\n        } else {\n          console.log(\"error fetching comments\");\n        }\n      } catch (error) {\n        console.log(error);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    fetchDetails();\n    fetchComments();\n  }, [params.movieID]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"text-center text-white\",\n    children: details && /*#__PURE__*/_jsxDEV(Container, {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: details.Title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: details.Poster,\n        alt: \"movie poster\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(ListGroup, {\n        style: {\n          listStyleType: \"none\"\n        },\n        children: !isLoading && comments.length === 0 ? /*#__PURE__*/_jsxDEV(ListGroupItem, {\n          className: \"my-3 bg-dark text-white\",\n          children: \"Non ci sono ancora commenti\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 15\n        }, this) : comments.map(c => /*#__PURE__*/_jsxDEV(ListGroupItem, {\n          className: \"my-3 bg-dark text-white\",\n          children: [c.author, \": \", c.comment]\n        }, c._id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 17\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n};\n_s(MovieDetails, \"o98xl4tzvWJacAOY0QTtsVq/zXA=\", false, function () {\n  return [useParams];\n});\n_c = MovieDetails;\nexport default MovieDetails;\nvar _c;\n$RefreshReg$(_c, \"MovieDetails\");","map":{"version":3,"names":["useEffect","useState","Container","ListGroup","ListGroupItem","useParams","OMDB_URL","jsxDEV","_jsxDEV","MovieDetails","_s","details","setDetails","comments","setComments","isLoading","setIsLoading","params","fetchDetails","resp","fetch","movieID","ok","data","json","console","log","error","fetchComments","response","headers","Authorization","className","children","Title","fileName","_jsxFileName","lineNumber","columnNumber","src","Poster","alt","style","listStyleType","length","map","c","author","comment","_id","_c","$RefreshReg$"],"sources":["C:/Users/Utente/OneDrive/Desktop/esercizi-corso/Settimana10/Giorno3/netflix-router/src/components/MovieDetails.jsx"],"sourcesContent":["import { useEffect } from \"react\";\r\nimport { useState } from \"react\";\r\nimport { Container, ListGroup, ListGroupItem } from \"react-bootstrap\";\r\nimport { useParams } from \"react-router\";\r\nimport OMDB_URL from \"../helpers/omdbURL\";\r\n\r\nconst MovieDetails = () => {\r\n  const [details, setDetails] = useState(null);\r\n  const [comments, setComments] = useState([]);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n  const params = useParams();\r\n\r\n  useEffect(() => {\r\n    const fetchDetails = async () => {\r\n      try {\r\n        let resp = await fetch(OMDB_URL + \"&i=\" + params.movieID);\r\n        if (resp.ok) {\r\n          let data = await resp.json();\r\n          console.log(data);\r\n          setDetails(data);\r\n        } else {\r\n          console.log(\"error fetching details\");\r\n        }\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n    };\r\n    const fetchComments = async () => {\r\n      setIsLoading(true);\r\n      try {\r\n        let response = await fetch(\r\n          \"https://striveschool-api.herokuapp.com/api/movies/\" + params.movieID + \"/comments/\",\r\n          {\r\n            headers: {\r\n              Authorization:\r\n                \"Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI2NTc4MmM1NmMwNTgzNTAwMTg1MjJkZTYiLCJpYXQiOjE3MDU1Mjc4OTEsImV4cCI6MTcwNjczNzQ5MX0.PBN8qNdCegS4pE066u6m-07VGKbCCJH7G662G2tq8N8\"\r\n            }\r\n          }\r\n        );\r\n        if (response.ok) {\r\n          let data = await response.json();\r\n          setComments(data);\r\n        } else {\r\n          console.log(\"error fetching comments\");\r\n        }\r\n      } catch (error) {\r\n        console.log(error);\r\n      } finally {\r\n        setIsLoading(false);\r\n      }\r\n    };\r\n    fetchDetails();\r\n    fetchComments();\r\n  }, [params.movieID]);\r\n\r\n  return (\r\n    <div className=\"text-center text-white\">\r\n      {details && (\r\n        <Container>\r\n          <h2>{details.Title}</h2>\r\n          <img src={details.Poster} alt=\"movie poster\" />\r\n          <ListGroup style={{ listStyleType: \"none\" }}>\r\n            {!isLoading && comments.length === 0 ? (\r\n              <ListGroupItem className=\"my-3 bg-dark text-white\">Non ci sono ancora commenti</ListGroupItem>\r\n            ) : (\r\n              comments.map(c => (\r\n                <ListGroupItem className=\"my-3 bg-dark text-white\" key={c._id}>\r\n                  {c.author}: {c.comment}\r\n                </ListGroupItem>\r\n              ))\r\n            )}\r\n          </ListGroup>\r\n        </Container>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MovieDetails;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}