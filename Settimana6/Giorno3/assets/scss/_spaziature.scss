$padding-default: 20px;
$margin-default: 0 auto;

$sizes: (
    sm: 12px,
    normal: 16px,
    md: 24px,
    lg: 36px,
    xl: 48px,
    xxl: 160px,
);

@mixin create-padding($direction: null) { // null nel senso che puoi anche non riceverlo e in quel caso legge l'else attribuendo un padding generale
    @each $key, $value in $sizes {
        .padding-#{$direction}-#{$key} { // nome della classe
            @if $direction {
                padding-#{$direction}: $value; // proprietà con valore
            } @else {
                padding: $value;
            }

        }
    }
}

// normalmente sarebbe 
// .classeDiv {
//     @include mioMixin;
// }

@include create-padding(); // dobbiamo fare così 
@include create-padding(top);
@include create-padding(bottom);
@include create-padding(left);
@include create-padding(right);
@include create-padding(block);
@include create-padding(inline);

@mixin create-margin($direction: null) { // null nel senso che puoi anche non riceverlo e in quel caso legge l'else attribuendo un padding generale
    @each $key, $value in $sizes {
        .margin-#{$direction}-#{$key} { // nome della classe
            @if $direction {
                margin-#{$direction}: $value; // proprietà con valore
            } @else {
                margin: $value;
            }

        }
    }
}

@include create-margin(); // dobbiamo fare così 
@include create-margin(top);
@include create-margin(bottom);
@include create-margin(left);
@include create-margin(right);
@include create-margin(block);
@include create-margin(inline);